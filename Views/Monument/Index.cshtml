@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<Monument>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<h1> ZABYTKI </h1>
@if (SignInManager.IsSignedIn(User))
{
    <a type="btn btn-success" asp-controller="Monument" asp-action="Create" class="btn btn-sm btn-outline-secondary">Dodaj nowy</a>
}
else
{
    <p> Aby móc dodawać, usuwać oraz edytować wpisy - zaloguj się!</p>
}


<form method="get" asp-action="Index">
    @{
        string selectedCity = "All";
        string selectedCategory = "All";
        var cityUrl = ViewContext.HttpContext.Request.Query["city"];
        var categoryUrl = ViewContext.HttpContext.Request.Query["category"];
        if(cityUrl.Count > 0)
            selectedCity = cityUrl.First();
        if(categoryUrl.Count > 0)
            selectedCategory = categoryUrl.First();
    }
    <div class="form-row">
        <div class="form-group col-md-6">
            <label>Miasto:</label>
                <select name="city" class="form-control" asp-items="@ViewBag.Cities" asp-for="@selectedCity">
                <option value="All">Wszystkie</option>
            </select>
        </div>
        <div class="form-group col-md-6">
            <label>Kategoria:</label>
                <select name="category" class="form-control" asp-items="@ViewBag.Categories" asp-for="@selectedCategory">
                <option value="All">Wszystkie</option>
            </select>
        </div>
        </div>
    <br />
    <button type="submit" class="btn btn-primary">Filtruj</button>
</form>

<main>

    <div class="album py-5 bg-light">
        <div class="container">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
                @foreach (var item in Model)
                {
                    <div class="col">
                    <div class="card shadow-sm">
                        @*<svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c" /><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>*@
                        <img class="card-img-top" src="@item.Image">
                        <div class="card-body">
                            <p class="card-text">@item.Name</p>
                            <p class="card-text">@item.Descripton</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a type="btn btn-success" asp-controller="Monument" asp-action="Detail" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Obejrzyj</a>
                                        @if (SignInManager.IsSignedIn(User))
                                        {
                                        <a type="btn btn-success" asp-controller="Monument" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Edytuj</a>
                                        <a type="btn btn-success" asp-controller="Monument" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Usuń</a>
                                        }
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
                }
            </div>
        </div>
    </div>
</main>
<nav>
    @Html.PagedListPager(Model, page => Url.Action("index", new { page = page, city = ViewContext.HttpContext.Request.Query["city"], category = ViewContext.HttpContext.Request.Query["category"] }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Następna strona",
    LinkToPreviousPageFormat = "Poprzednia strona",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
</nav>